From a4e668528bfab5826782a9722b0e0a6ff9dcaba3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=C3=96zg=C3=BCr=20Kele=C5=9F?= <ozgurkeles@gmail.com>
Date: Mon, 12 Oct 2015 20:53:38 +0300
Subject: [PATCH] 1-power-fail bug fix Kernel panic - not syncing: No init
 found

---
 drivers/misc/power-fail.c | 44 ++++++++++++++++++++++++--------------------
 1 file changed, 24 insertions(+), 20 deletions(-)

diff --git a/drivers/misc/power-fail.c b/drivers/misc/power-fail.c
index 517ec67..e2ae5fc 100644
--- a/drivers/misc/power-fail.c
+++ b/drivers/misc/power-fail.c
@@ -72,6 +72,7 @@ static void disp_resume(void)
 #define POWER_FAIL_EVENT_BIT        0
 #define POWER_FAIL_LCD_CLOSE_BIT    1
 #define POWER_FAIL_IRQ_BIT          2
+#define POWER_FAIL_START_IRQ        3
 
 
 static unsigned long powerfail_bits = 0;
@@ -101,6 +102,26 @@ static void open_lcd(void)
     }
 }
 
+static void start_timer_interrupt(void)
+{
+    if (!test_and_set_bit(POWER_FAIL_START_IRQ, &powerfail_bits)) {
+        printk(KERN_INFO DEVICE_NAME ": Start Timer Interrupt\n");
+#ifdef CONFIG_PLAT_SUNXI
+        writel(readl(SW_VA_TIMERC_IO_BASE + TMR_IRQ_EN_REG) | TMR5_IRQ_EN, SW_VA_TIMERC_IO_BASE + TMR_IRQ_EN_REG);
+#endif
+    }
+}
+
+static void stop_timer_interrupt(void)
+{
+    if (test_and_clear_bit(POWER_FAIL_START_IRQ, &powerfail_bits)) {
+        printk(KERN_INFO DEVICE_NAME ": Stop Timer Interrupt\n");
+#ifdef CONFIG_PLAT_SUNXI
+        writel(readl(SW_VA_TIMERC_IO_BASE + TMR_IRQ_EN_REG) & ~TMR5_IRQ_EN, SW_VA_TIMERC_IO_BASE + TMR_IRQ_EN_REG);
+#endif
+    }
+}
+
 
 static void powerfail_event(void)
 {
@@ -187,21 +208,6 @@ static irqreturn_t sunxi_isr_timer5(int irq, void *dummy)
 {
     if (readl(SW_VA_TIMERC_IO_BASE + TMR_IRQ_STA_REG) & TMR5_IRQ_PEND) {
 
-        /*
-        //gpio_write_one_pin_value(power_fail_port_handler, timer_toogle, NULL);
-        //if (power_fail_port_addr) {
-        //    *power_fail_port_addr ^= (1 << power_fail_port_num);
-        //}
-
-        if (fail_count)
-            fail_count = 0;
-        else
-            fail_count = 1;
-        gpio_write_one_pin_value(power_fail_port_handler, fail_count, NULL);
-        fail_count++;
-        if (fail_count >= 1000)
-            fail_count = 0;*/
-
         if (!test_and_set_bit(POWER_FAIL_IRQ_BIT, &powerfail_bits)) {
             if (power_fail_port_addr) { //POWER_FAIL_IRQ_BIT
                 if ( !((*power_fail_port_addr) & (1 << power_fail_port_num)) ) {
@@ -242,6 +248,7 @@ static struct irqaction sw_timer5_irq = {
 
 static int powerfail_open(struct inode *inode, struct file *filp)
 {
+    start_timer_interrupt();
     return nonseekable_open(inode, filp);
 }
 
@@ -374,9 +381,6 @@ static int __init powerfail_init(void)
     if (!ret) {
         ret = misc_register(&misc);
         if(!ret) {
-#ifdef CONFIG_PLAT_SUNXI
-            writel(readl(SW_VA_TIMERC_IO_BASE + TMR_IRQ_EN_REG) | TMR5_IRQ_EN, SW_VA_TIMERC_IO_BASE + TMR_IRQ_EN_REG);
-#endif
             printk(KERN_INFO DEVICE_NAME ": Init\n");
         } else {
             printk(KERN_ERR DEVICE_NAME ": register failure\n");
@@ -397,8 +401,8 @@ returnerr:
 
 static void __exit powerfail_exit(void)
 {
+    stop_timer_interrupt();
 #ifdef CONFIG_PLAT_SUNXI
-    writel(readl(SW_VA_TIMERC_IO_BASE + TMR_IRQ_EN_REG) & ~TMR5_IRQ_EN, SW_VA_TIMERC_IO_BASE + TMR_IRQ_EN_REG);
     remove_irq(SW_INT_IRQNO_TIMER5, &sw_timer5_irq);
     gpio_release(power_fail_port_handler, 1);
 #endif
@@ -410,6 +414,6 @@ module_init(powerfail_init);
 module_exit(powerfail_exit);
 
 MODULE_LICENSE("GPL");
-MODULE_VERSION("1.0.0.0");
+MODULE_VERSION("1.0.0.1");
 MODULE_AUTHOR("Özgür Keleş <ozgur.keles@ries.com.tr>");
 MODULE_DESCRIPTION("power-fail driver");
-- 
2.6.0

